setwd("C:/Users/Riddhesh/Desktop/Machine Learning/Assignment 1")
library(MASS)
dataset=read.table("wine.data",sep=",")
global_mean<-colMeans(dataset)[-1]
#split into classes
dataset<-split(dataset,dataset$V1)
num_of_classes<-length(dataset)
org_dim<-dim(data.frame(dataset[1]))[2]-1
Sw<-matrix(0,org_dim,org_dim)
Sb<-matrix(0,org_dim,org_dim)
for (i in 1:num_of_classes){
#CALCULATION OF WITHIN CLASS COVARIANCE
class_data<-data.frame(dataset[i])
#Select x attributes out of dataset
class_data<-class_data[-1]
#Setting mean to 0
class_mean<-colMeans(class_data)
std_data<-sweep(class_data,2,class_mean)
#Variance within classes
Sk<-t(std_data)%*%as.matrix(std_data)
#Sum of within class variance
Sw<-Sw+Sk
#CALCULATION OF BETWEEN CLASS COVARIANCE
central_mean<-class_mean-global_mean
central_mean<-central_mean%*%t(central_mean)
central_mean<-nrow(class_data)*central_mean
Sb<-Sb+central_mean
}
comp<-ginv(Sw)%*%Sb
evals<-eigen(comp)$values
evals
evec<-eigen(comp)$vec
View(evec)
length(evals)
evec[1]
evec[1,]
evec[V1]
evec[V1]
evec[2,]
rbind(evals,evals)
for(i in 1:length(evals)){
if(!is.complex(eval[i])){
evals[i]=Re(evals[i])
}
}
evals[1]
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
evals[i]=Re(evals[i])
}
}
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
evals[i]=Re(evals[i])
}
}
Re(evals[1])
evals
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
evals[i]<-Re(evals[i])
}
}
evals
evals<-eigen(comp)$values
evec<-eigen(comp)$vec
r_evals<-c()
for(i in 1:length(evals)){
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-c(r_evals,Re(evals[i])
}
}
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-c(r_evals,Re(evals[i]))
}
}
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-c(r_evals,Re(evals[i]))
}
}
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-c(r_evals,Re(evals[i]))
}
}
r_evals<-character()
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-c(r_evals,Re(evals[i]))
}
}
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-append(r_evals,Re(evals[i]))
}
}
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-append(r_evals,evals[i])
}
}
append(evals,5)
append(r_evals,"a")
r_evals<-character()
append(r_evals,"a")
r_evals<-append(r_evals,"a")
r_evals<-vector("numeric")
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-append(r_evals,evals[i])
}
}
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
r_evals<-append(r_evals,Re(evals[i]))
}
}
for(i in 1:length(evals)){
if(!is.complex(evals[i])){
append(r_evals,Re(evals[i]))
}
}
r_evals<-append(r_evals,1)
is.complex(evals[1])
for(i in 1:length(evals)){
if(Im(evals[i])==0){
append(r_evals,Re(evals[i]))
}
}
Im(evals[1])==0
for(i in 1:length(evals)){
if(Im(evals[i])==0){
print("HEll")
append(r_evals,Re(evals[i]))
}
}
for(i in 1:length(evals)){
if(Im(evals[i])==0){
print(Re(evals[i]))
append(r_evals,Re(evals[i]))
}
}
for(i in 1:length(evals)){
if(Im(evals[i])==0){
print(Re(evals[i]))
r_evals<-append(r_evals,Re(evals[i]))
}
}
evec[1]
evec<-eigen(comp)$vectors
evec[first,]
first<-1
evec[first,]
apply(evecs[1,],c(1,2),Re)
apply(evec[1,],c(1,2),Re)
apply(evec[1,],1,Re)
apply(evec[1,],2,Re)
re(evec)
Re(evec)
r_evecs<-Re(evecs)
evecs<-eigen(comp)$vectors
r_evecs<-Re(evecs)
evecs<-Re(evecs)
setwd("C:/Users/Riddhesh/Desktop/Machine Learning/Assignment 1")
library(MASS)
dataset=read.table("wine.data",sep=",")
global_mean<-colMeans(dataset)[-1]
#split into classes
dataset<-split(dataset,dataset$V1)
num_of_classes<-length(dataset)
org_dim<-dim(data.frame(dataset[1]))[2]-1
Sw<-matrix(0,org_dim,org_dim)
Sb<-matrix(0,org_dim,org_dim)
for (i in 1:num_of_classes){
#CALCULATION OF WITHIN CLASS COVARIANCE
class_data<-data.frame(dataset[i])
#Select x attributes out of dataset
class_data<-class_data[-1]
#Setting mean to 0
class_mean<-colMeans(class_data)
std_data<-sweep(class_data,2,class_mean)
#Variance within classes
Sk<-t(std_data)%*%as.matrix(std_data)
#Sum of within class variance
Sw<-Sw+Sk
#CALCULATION OF BETWEEN CLASS COVARIANCE
central_mean<-class_mean-global_mean
central_mean<-central_mean%*%t(central_mean)
central_mean<-nrow(class_data)*central_mean
Sb<-Sb+central_mean
}
comp<-ginv(Sw)%*%Sb
evals<-eigen(comp)$values
evecs<-eigen(comp)$vectors
r_evals<-vector("numeric")
evecs<-Re(evecs)
first<-1
for(i in 1:length(evals)){
if(Im(evals[i])==0){
if(first==1){
r_evals<-evals[i]
r_evecs<-evecs[i,]
first<-0
}
else{
r_evals<-append(r_evals,Re(evals[i]))
r_evecs<-cbind(r_evecs,evecs[i,])
}
}
}
setwd("C:/Users/Riddhesh/Desktop/Machine Learning/Assignment 1")
library(MASS)
dataset=read.table("wine.data",sep=",")
global_mean<-colMeans(dataset)[-1]
#split into classes
dataset<-split(dataset,dataset$V1)
num_of_classes<-length(dataset)
org_dim<-dim(data.frame(dataset[1]))[2]-1
Sw<-matrix(0,org_dim,org_dim)
Sb<-matrix(0,org_dim,org_dim)
for (i in 1:num_of_classes){
#CALCULATION OF WITHIN CLASS COVARIANCE
class_data<-data.frame(dataset[i])
#Select x attributes out of dataset
class_data<-class_data[-1]
#Setting mean to 0
class_mean<-colMeans(class_data)
std_data<-sweep(class_data,2,class_mean)
#Variance within classes
Sk<-t(std_data)%*%as.matrix(std_data)
#Sum of within class variance
Sw<-Sw+Sk
#CALCULATION OF BETWEEN CLASS COVARIANCE
central_mean<-class_mean-global_mean
central_mean<-central_mean%*%t(central_mean)
central_mean<-nrow(class_data)*central_mean
Sb<-Sb+central_mean
}
comp<-ginv(Sw)%*%Sb
evals<-eigen(comp)$values
evecs<-eigen(comp)$vectors
r_evals<-vector("numeric")
evecs<-Re(evecs)
first<-1
for(i in 1:length(evals)){
if(Im(evals[i])==0){
if(first==1){
r_evals<-Re(evals[i])
r_evecs<-evecs[i,]
first<-0
}
else{
r_evals<-append(r_evals,Re(evals[i]))
r_evecs<-cbind(r_evecs,evecs[i,])
}
}
}
View(r_evecs)
View(r_evecs)
View(evecs)
setwd("C:/Users/Riddhesh/Desktop/Machine Learning/Assignment 1")
library(MASS)
dataset=read.table("wine.data",sep=",")
global_mean<-colMeans(dataset)[-1]
#split into classes
dataset<-split(dataset,dataset$V1)
num_of_classes<-length(dataset)
org_dim<-dim(data.frame(dataset[1]))[2]-1
Sw<-matrix(0,org_dim,org_dim)
Sb<-matrix(0,org_dim,org_dim)
for (i in 1:num_of_classes){
#CALCULATION OF WITHIN CLASS COVARIANCE
class_data<-data.frame(dataset[i])
#Select x attributes out of dataset
class_data<-class_data[-1]
#Setting mean to 0
class_mean<-colMeans(class_data)
std_data<-sweep(class_data,2,class_mean)
#Variance within classes
Sk<-t(std_data)%*%as.matrix(std_data)
#Sum of within class variance
Sw<-Sw+Sk
#CALCULATION OF BETWEEN CLASS COVARIANCE
central_mean<-class_mean-global_mean
central_mean<-central_mean%*%t(central_mean)
central_mean<-nrow(class_data)*central_mean
Sb<-Sb+central_mean
}
comp<-ginv(Sw)%*%Sb
evals<-eigen(comp)$values
evecs<-eigen(comp)$vectors
View(evecs)
r_evals<-vector("numeric")
evecs<-Re(evecs)
first<-1
nevecs<-eigen(comp)$vectors
View(nevecs)
View(nevecs)
for(i in 1:length(evals)){
if(Im(evals[i])==0){
if(first==1){
r_evals<-Re(evals[i])
r_evecs<-evecs[i,]
first<-0
}
else{
r_evals<-append(r_evals,Re(evals[i]))
r_evecs<-cbind(r_evecs,evecs[i,])
}
}
}
View(r_evecs)
for(i in 1:length(evals)){
if(Im(evals[i])==0){
if(first==1){
r_evals<-Re(evals[i])
r_evecs<-evecs[i,]
first<-0
}
else{
r_evals<-append(r_evals,Re(evals[i]))
r_evecs<-rbind(r_evecs,evecs[i,])
}
}
}
r_evecs<-evecs[1,]
setwd("C:/Users/Riddhesh/Desktop/Machine Learning/Assignment 1")
library(MASS)
dataset=read.table("wine.data",sep=",")
global_mean<-colMeans(dataset)[-1]
#split into classes
dataset<-split(dataset,dataset$V1)
num_of_classes<-length(dataset)
org_dim<-dim(data.frame(dataset[1]))[2]-1
Sw<-matrix(0,org_dim,org_dim)
Sb<-matrix(0,org_dim,org_dim)
for (i in 1:num_of_classes){
#CALCULATION OF WITHIN CLASS COVARIANCE
class_data<-data.frame(dataset[i])
#Select x attributes out of dataset
class_data<-class_data[-1]
#Setting mean to 0
class_mean<-colMeans(class_data)
std_data<-sweep(class_data,2,class_mean)
#Variance within classes
Sk<-t(std_data)%*%as.matrix(std_data)
#Sum of within class variance
Sw<-Sw+Sk
#CALCULATION OF BETWEEN CLASS COVARIANCE
central_mean<-class_mean-global_mean
central_mean<-central_mean%*%t(central_mean)
central_mean<-nrow(class_data)*central_mean
Sb<-Sb+central_mean
}
comp<-ginv(Sw)%*%Sb
evals<-eigen(comp)$values
evecs<-eigen(comp)$vectors
r_evals<-vector("numeric")
evecs<-Re(evecs)
first<-1
for(i in 1:length(evals)){
if(Im(evals[i])==0){
if(first==1){
r_evals<-Re(evals[i])
r_evecs<-evecs[i,]
first<-0
print(r_evecs)
}
else{
r_evals<-append(r_evals,Re(evals[i]))
r_evecs<-cbind(r_evecs,evecs[i,])
print(r_evecs)
}
}
}
setwd("C:/Users/Riddhesh/Desktop/Machine Learning/Assignment 1")
library(MASS)
dataset=read.table("wine.data",sep=",")
global_mean<-colMeans(dataset)[-1]
#split into classes
dataset<-split(dataset,dataset$V1)
num_of_classes<-length(dataset)
org_dim<-dim(data.frame(dataset[1]))[2]-1
Sw<-matrix(0,org_dim,org_dim)
Sb<-matrix(0,org_dim,org_dim)
for (i in 1:num_of_classes){
#CALCULATION OF WITHIN CLASS COVARIANCE
class_data<-data.frame(dataset[i])
#Select x attributes out of dataset
class_data<-class_data[-1]
#Setting mean to 0
class_mean<-colMeans(class_data)
std_data<-sweep(class_data,2,class_mean)
#Variance within classes
Sk<-t(std_data)%*%as.matrix(std_data)
#Sum of within class variance
Sw<-Sw+Sk
#CALCULATION OF BETWEEN CLASS COVARIANCE
central_mean<-class_mean-global_mean
central_mean<-central_mean%*%t(central_mean)
central_mean<-nrow(class_data)*central_mean
Sb<-Sb+central_mean
}
comp<-ginv(Sw)%*%Sb
evals<-eigen(comp)$values
evecs<-eigen(comp)$vectors
r_evals<-vector("numeric")
evecs<-Re(evecs)
first<-1
for(i in 1:length(evals)){
if(Im(evals[i])==0){
if(first==1){
r_evals<-Re(evals[i])
r_evecs<-evecs[i,]
first<-0
print(r_evecs)
}
else{
r_evals<-append(r_evals,Re(evals[i]))
r_evecs<-cbind(r_evecs,evecs[i,])
print(r_evecs)
}
}
}
for(i in 1:length(evals)){
if(Im(evals[i])==0){
if(first==1){
r_evals<-Re(evals[i])
r_evecs<-evecs[,i]
first<-0
print(r_evecs)
}
else{
r_evals<-append(r_evals,Re(evals[i]))
r_evecs<-cbind(r_evecs,evecs[,i])
print(r_evecs)
}
}
}
evecs[,1]
r_evals<-vector("numeric")
evecs<-Re(evecs)
first<-1
for(i in 1:length(evals)){
if(Im(evals[i])==0){
if(first==1){
r_evals<-Re(evals[i])
r_evecs<-evecs[,i]
first<-0
print(r_evecs)
}
else{
r_evals<-append(r_evals,Re(evals[i]))
r_evecs<-rbind(r_evecs,evecs[,i])
print(r_evecs)
}
}
}
View(r_evecs)
View(r_evecs)
r_evecs<-t(r_evecs)
new_dim<-3
sorted_eval<-order(-r_evals)
r_evecs[1,]
final_data<-r_evecs[,sorted_eval[1]]
for(i in 2:new_dim){
final_data<-r_bind(final_data,r_evecs[,sorted_eval[i]])
}
sorted_eval<-order(-r_evals)
final_data<-r_evecs[,sorted_eval[1]]
for(i in 2:new_dim){
final_data<-rbind(final_data,r_evecs[,sorted_eval[i]])
}
View(final_data)
View(final_data)
setwd(".")
library(MASS)
dataset=read.table("wine.data",sep=",")
